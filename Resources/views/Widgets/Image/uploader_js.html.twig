<link href="{{ asset('bundles/mobilecartadmin/css/html5imageuploader/uploader-style.css') }}" rel="stylesheet" type="text/css" />
<script src="{{ asset('bundles/mobilecartadmin/js/html5imageuploader/jquery.html5uploader-1.1.js') }}"></script>
<script src="{{ asset('bundles/mobilecartadmin/js/html5imageuploader/exif.js') }}"></script>
<script src="{{ asset('bundles/mobilecartadmin/js/html5imageuploader/image-table.js') }}"></script>
<script type="text/javascript">

    // ImageTable instance
    var imageTable = new ImageTable({
        bodyEl: $('div#section-image-list table tbody')
    });

    var imageSection = $('div#section-image-upload');
    var imageList = $('div#section-image-list');
    var parentEl = imageSection.parent();

    imageSection.find('.media-drop').each(function(){

        var self = $(this);
        //var parentEl = self.parent();

        var settings = self.html5Uploader({

            parent: parentEl,
            postUrl: '{{ path('cart_admin_image_upload_base64') }}' + '{{ upload_query|raw }}', // add parameters here
            imageUrl: '{{ path('cart_admin_image') }}',

            /**
             * File dropped / selected.
             */
            onDropped: function(success) {
                var self = this;

                if (!success) {
                    self.parent.find('.errormessages').text('Images allowed are jpg, png or gif images.');
                } else {

                    var sizeInput = imageSection.find('input[name="targetsize"]:checked');
                    var code = sizeInput.attr('data-code');
                    settings.postUrl = self.postUrl + '&image_code=' + code;

                    self.parent.find('.errormessages').empty();
                    self.parent.find('.media-drop-placeholder > *').hide();
                    self.parent.find('.media-drop-placeholder').toggleClass('busyloading', true).css('cursor', 'progress');
                }
            },

            /**
             * Image cropped and scaled.
             */
            onProcessed: function(canvas) {
                var self = this;

                if (canvas) {

                    // Remove possible previously loaded image.
                    var url = canvas.toDataURL();
                    var newImg = document.createElement("img");
                    newImg.src = url;

                    // Show new image.
                    self.parent.find('.droppedimage').empty().append(newImg);

                    // Hide dropbox.
                    self.parent.find('.dropbox').hide();

                    // Button to reset upload box.
                    self.parent.find('.resetupload').show();

                    // Reset dropbox for reuse.
                    self.parent.find('.errormessages').empty();
                    self.parent.find('.media-drop-placeholder > *').show();
                    self.parent.find('.media-drop-placeholder').toggleClass('busyloading', false).css('cursor', 'auto');
                }
            },

            /**
             * Image uploaded.
             *
             * @param success boolean True indicates success
             * @param response Object from parsed JSON
             */
            onUploaded: function(success, response) {
                if (success) {
                    // add to list in list tab
                    imageTable.add(response);
                    modalWidget.setLabel('Success');
                } else {
                    modalWidget.setLabel('Error');
                }
                modalWidget.setBody(response.message);
                imageTable.serialize();
                $('#modal-shared').modal('show');
            },

            /**
             * Progress during upload.
             *
             * @param progress Number Progress percentage
             */
            onUploadProgress: function(progress) {
                //window.console && console.log('Upload progress: ' + progress);
            }
        });

        // Target image size selection.
        parentEl.find('input[name="targetsize"]').on('change', function() {
            var self = $(this);
            //var val = self.val();
            var width = self.attr('data-width');
            var height = self.attr('data-height');
            //var code = self.attr('data-code');
            settings.cropRatio = width / height;
            //$('#dropbox').css('width', width + 'px').css('height', height + 'px');
        });

        //
        parentEl.find('.resetupload').hide().on('click', function(){
            var self = $(this);
            parentEl.find('.droppedimage').empty();
            parentEl.find('.dropbox').show();
            self.hide();
        });
    });

    imageList.on('click', 'a.image-remove-btn', function(e) {
        e.preventDefault();
        var self = $(this);
        var trEl = self.parent().parent();
        trEl.remove();
        imageTable.serialize();
        return false;
    });

    imageList.on('click', 'input.image-is-default', function(e) {
        //e.preventDefault();
        var self = $(this);
        imageTable.serialize();
        return true;
    });

</script>
